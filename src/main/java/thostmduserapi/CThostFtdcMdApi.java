package thostmduserapi;

import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.ann.Virtual;
import org.bridj.cpp.CPPObject;

/**
 * <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:57</i><br>
 * This file was autogenerated by
 * <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit
 * <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or
 * <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("thostmduserapi")
public class CThostFtdcMdApi extends CPPObject {
	/**
	 * modify for udp marketdata<br>
	 * Original signature :
	 * <code>CThostFtdcMdApi* CreateFtdcMdApi(const char*, const bool)</code><br>
	 * <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:64</i>
	 */
	native public static Pointer<CThostFtdcMdApi> CreateFtdcMdApi(Pointer<Byte> pszFlowPath, boolean bIsUsingUdp); // {
	// return Pointer.pointerToAddress(CreateFtdcMdApi(Pointer.getPeer(pszFlowPath),
	// bIsUsingUdp), CThostFtdcMdApi.class);
	// }
	// @Ptr
	// protected native static long CreateFtdcMdApi(@Ptr long pszFlowPath, boolean
	// bIsUsingUdp);

	/**
	 * @remark \ufffd\ufffd\ufffd\ufffd\u02b9\ufffd\u00f1\ufffd\ufffd\u04ff\u06b6\ufffd\ufffd\ufffd\u02b1,\ufffd\ufffd\ufffd\u00f8\u00fa\ufffd\ufffd\ufffd\u027e\ufffd\ufffd\u04ff\u06b6\ufffd\ufffd\ufffd<br>
	 *         Original signature : <code>void Release()</code><br>
	 *         <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:68</i>
	 */
	@Virtual(0)
	native public void Release();

	/**
	 * @remark \ufffd\ufffd\u02bc\ufffd\ufffd\ufffd\ufffd\ufffd\u043b\ufffd\ufffd\ufffd,\u05bb\ufffd\u0435\ufffd\ufffd\u00fa\ufffd,\ufffd\u04ff\u06b2\u017f\ufffd\u02bc\ufffd\ufffd\ufffd\ufffd<br>
	 *         Original signature : <code>void Init()</code><br>
	 *         <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:72</i>
	 */
	@Virtual(1)
	native public void Init();

	/**
	 * @return \ufffd\u07f3\ufffd\ufffd\u02f3\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 *         Original signature : <code>int Join()</code><br>
	 *         <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:76</i>
	 */
	@Virtual(2)
	native public int Join();

	/**
	 * @remark \u05bb\ufffd\u0435\ufffd\u00bc\ufffd\u0279\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffd\u0735\u00f5\ufffd\ufffd\ufffd\u0237\ufffd\u013d\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 *         Original signature : <code>char* GetTradingDay()</code><br>
	 *         <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:81</i>
	 */
	@SuppressWarnings("deprecation")
	@Virtual(3)
	public Pointer<Byte> GetTradingDay() {
		return Pointer.pointerToAddress(GetTradingDay$2(), Byte.class);
	}

	@Ptr
	@Name("GetTradingDay")
	@Virtual(3)
	protected native long GetTradingDay$2();

	/**
	 * @remark \ufffd\ufffdtcp\ufffd\ufffd\ufffd\ufffd\udd2b\ufffd\ufffd\u042d\ufffd\u98ec\ufffd\ufffd127.0.0.1\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd\ufffd17001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u02ff\u06ba\u0161\ufffd<br>
	 *         Original signature : <code>void RegisterFront(char*)</code><br>
	 *         <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:87</i>
	 */
	@Virtual(4)
	public void RegisterFront(Pointer<Byte> pszFrontAddress) {
		RegisterFront(Pointer.getPeer(pszFrontAddress));
	}

	@Virtual(4)
	protected native void RegisterFront(@Ptr long pszFrontAddress);

	/**
	 * @remark RegisterNameServer\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdRegisterFront<br>
	 *         Original signature : <code>void RegisterNameServer(char*)</code><br>
	 *         <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:94</i>
	 */
	@Virtual(5)
	public void RegisterNameServer(Pointer<Byte> pszNsAddress) {
		RegisterNameServer(Pointer.getPeer(pszNsAddress));
	}

	@Virtual(5)
	protected native void RegisterNameServer(@Ptr long pszNsAddress);

	/**
	 * @param pSpi
	 *            \ufffd\ufffd\ufffd\ufffd\ufffd\u053b\u0635\ufffd\ufffd\u04ff\ufffd\ufffd\ufffd\ufffd\u02b5\ufffd\ufffd<br>
	 *            Original signature :
	 *            <code>void RegisterSpi(CThostFtdcMdSpi*)</code><br>
	 *            <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:98</i>
	 */
	@Virtual(6)
	public void RegisterSpi(Pointer<CThostFtdcMdSpi> pSpi) {
		RegisterSpi(Pointer.getPeer(pSpi));
	}

	@Virtual(6)
	protected native void RegisterSpi(@Ptr long pSpi);

	/**
	 * @remark<br>
	 * 			Original signature :
	 *             <code>int SubscribeMarketData(char*[], int)</code><br>
	 *             <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:104</i>
	 */
	@Virtual(7)
	public int SubscribeMarketData(Pointer<Pointer<Byte>> ppInstrumentID, int nCount) {
		return SubscribeMarketData(Pointer.getPeer(ppInstrumentID), nCount);
	}

	@Virtual(7)
	protected native int SubscribeMarketData(@Ptr long ppInstrumentID, int nCount);

	/**
	 * @remark<br>
	 * 			Original signature :
	 *             <code>int UnSubscribeMarketData(char*[], int)</code><br>
	 *             <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:110</i>
	 */
	@Virtual(8)
	public int UnSubscribeMarketData(Pointer<Pointer<Byte>> ppInstrumentID, int nCount) {
		return UnSubscribeMarketData(Pointer.getPeer(ppInstrumentID), nCount);
	}

	@Virtual(8)
	protected native int UnSubscribeMarketData(@Ptr long ppInstrumentID, int nCount);

	/**
	 * \ufffd\u00fb\ufffd\ufffd\ufffd\u00bc\ufffd\ufffd\ufffd\ufffd<br>
	 * Original signature :
	 * <code>int ReqUserLogin(CThostFtdcReqUserLoginField*, int)</code><br>
	 * <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:113</i>
	 */
	@Virtual(9)
	public int ReqUserLogin(Pointer<CThostFtdcReqUserLoginField> pReqUserLoginField, int nRequestID) {
		return ReqUserLogin(Pointer.getPeer(pReqUserLoginField), nRequestID);
	}

	@Virtual(9)
	protected native int ReqUserLogin(@Ptr long pReqUserLoginField, int nRequestID);

	/**
	 * \ufffd\u01f3\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * Original signature :
	 * <code>int ReqUserLogout(CThostFtdcUserLogoutField*, int)</code><br>
	 * <i>native declaration : ctpapi/linux/ThostFtdcMdApi.h:117</i>
	 */
	@Virtual(10)
	public int ReqUserLogout(Pointer<CThostFtdcUserLogoutField> pUserLogout, int nRequestID) {
		return ReqUserLogout(Pointer.getPeer(pUserLogout), nRequestID);
	}

	@Virtual(10)
	protected native int ReqUserLogout(@Ptr long pUserLogout, int nRequestID);

	public CThostFtdcMdApi() {
		super();
	}

	public CThostFtdcMdApi(Pointer<? extends CPPObject> pointer) {
		super(pointer);
	}
}
